## Autogenerated by Scribe. DO NOT MODIFY.

name: Doctors
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/doctor
    metadata:
      groupName: Doctors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Doctors'
      description: 'List the doctors of the user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bZh153E66eda8ckaPfVvD4g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/doctor
    metadata:
      groupName: Doctors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Doctor'
      description: 'Create a doctor for user with given parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: earum
        type: string
        custom: []
    cleanBodyParameters:
      name: earum
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 366bDkg14vV8ceEPh5Zfada'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/doctor/{id}'
    metadata:
      groupName: Doctors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View Doctor'
      description: 'View the doctor details'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the doctor.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5g4dvaaPbk6f6EeDh38ZVc1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/doctor/{id}'
    metadata:
      groupName: Doctors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Doctor'
      description: 'Update the doctor with given paramaters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the doctor.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: tempore
        type: string
        custom: []
    cleanBodyParameters:
      name: tempore
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P8Z5ack16davhE46eg3bVDf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/doctor/{id}'
    metadata:
      groupName: Doctors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Doctor'
      description: 'Delete the given doctor.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the doctor.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4ecEP1av86fhb6VD3daZ5gk'
    controller: null
    method: null
    route: null
    custom: []
