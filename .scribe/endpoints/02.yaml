name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Register the user with given data if valid.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: goyette.berta@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'Password for the user.'
        required: false
        example: '9O6@(5w\\ZM~[X%pQ'
        type: string
        custom: []
    cleanBodyParameters:
      name: ut
      email: goyette.berta@example.net
      password: '9O6@(5w\\ZM~[X%pQ'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Login the user with given data if valid.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: langworth.bernadette@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password for the user.'
        required: false
        example: 8d<$I/s
        type: string
        custom: []
    cleanBodyParameters:
      email: langworth.bernadette@example.com
      password: 8d<$I/s
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/profile-edit
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Profile Update'
      description: 'Profile Update the user with given data if valid.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name for the user.'
        required: false
        example: sint
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: genoveva96@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password for the user.'
        required: false
        example: '<3L4w_[vLc^lw`@'
        type: string
        custom: []
      surname:
        name: surname
        description: 'Surname for the user.'
        required: false
        example: officia
        type: string
        custom: []
      phone:
        name: phone
        description: 'Phone for the user.'
        required: false
        example: corrupti
        type: string
        custom: []
    cleanBodyParameters:
      name: sint
      email: genoveva96@example.com
      password: '<3L4w_[vLc^lw`@'
      surname: officia
      phone: corrupti
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kVbPe3a6a1Dh6Zg45f8cEvd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/destroy/{id}'
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy User'
      description: 'Destroy User with given parameters'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the destroy.'
        required: true
        example: esse
        type: string
        custom: []
    cleanUrlParameters:
      id: esse
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dVeE3faha466D8cvb1ZkP5g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/detail
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Profile
      description: 'Profile Detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z3ekaPEgD4vb16h8c6afdV5'
    controller: null
    method: null
    route: null
    custom: []
